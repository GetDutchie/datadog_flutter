# From https://raw.githubusercontent.com/dart-lang/intl/master/.github/workflows/test-package.yml
name: Dart CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PUB_ENVIRONMENT: bot.github

jobs:
  # Check code formatting and static analysis on a single OS (linux)
  # against Dart dev.
  analyze:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sdk: [dev]
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v0.3
        with:
          sdk: ${{ matrix.sdk }}
      - name: Install Flutter
        uses: subosito/flutter-action@v1.4.0
      - id: install
        name: Install dependencies
        run: flutter pub get
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        if: always() && steps.install.outcome == 'success'
      - name: Analyze code
        run: dart analyze --fatal-infos
        if: always() && steps.install.outcome == 'success'

  # Run tests on a matrix consisting of two dimensions:
  # 1. OS: ubuntu-latest, (macos-latest, windows-latest)
  # 2. release channel: dev
  test:
    runs-on: ubuntu-latest
    container:
      image: cirrusci/flutter:{{ matrix.flutter_version }}
    strategy:
      fail-fast: false
      matrix:
        # Add macos-latest and/or windows-latest if relevant for this package.
        os: [ubuntu-latest]
        sdk: [dev]
        flutter_version: [latest]
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v0.3
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: flutter pub get
      - name: Run VM tests
        run: flutter test
        if: always() && steps.install.outcome == 'success'
